#include <vcl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include "Bibl.h"
#include "MainFormUnit.h quot;
#pragma hdrstop
//*** ??????????? ***
HomeBibl::HomeBibl(){
year = 0;
}
//*** ????????? ?????? ?? ?????***
int LoadBooks(){
char line[256]; // ????? ??? ????? ??????
int i;
FILE *f = fopen(BiblFile, "r");
numRecords = 0;
int len=0;
while (fgets(line, 256, f) != 0) {
len = strlen(line);
char *avtor;
char *name;
int year;
char *t;
// ?????? ??????????? ?????
if (len > 0 && line[len - 1] == '\n') {
line[len - 1] = 0; --len;
}
// ???????? ???
avtor = (char *) malloc((len) +1);
strcpy(avtor, line);

// ??????? ??????
if (fgets(line, 256, f) != 0) {
len = strlen(line);
if (len > 0 && line[len - 1] == '\n') {
line[len - 1] = 0; --len;
}
name = (char *) malloc((len) + 1);
strcpy(name, line);
}
if (fgets(line, 256, f) != 0) {
len = strlen(line);
if (len > 0 && line[len - 1] == '\n') {
line[len - 1] = 0; --len;
}
//year = (int *) malloc((len) + 1);
t = (char *) malloc((len)+1);
strcpy(t,line);
year = atoi(t);
}
// ???????? ????? ??????
ob[numRecords].avtor = avtor;
ob[numRecords].name = name;
ob[numRecords].year = year;
++numRecords; // ???????? ????? ???????
}
fclose(f);
return numRecords;
};
//*** ?????????? ???? ***
void HomeBibl::SortBooks (int mode, bool HighLow){
char *s1, *s2, *t1, *t2;
int l1,l2;
int y1,y2, y=0;
// ???? - ??????/?? ?????? ???????
bool change = false;
int i,j,k=0;
//???? ?? ???? ???????
for (i = 0; i<numRecords; i++) {
switch (mode) {
case 1: {s1 = ob[i].avtor; l1 = strlen(s1); break;}
case 2: {s1 = ob[i].name; l1 = strlen(s1); break;}
case 3: {y1 = ob[i].year; break;}
}
//???? ?? ???? ???????
for (j = i+1; j<numRecords; j++) {
switch (mode) {
case 1: {s2 = ob[j].avtor; break;}
case 2: {s2 = ob[j].name; break;}
case 3: {y2 = ob[j].year; break;}
}
if (mode == 3) {
if (HighLow)
//???? ? ?????? ?????? ?????? ?????? ??? ?? ?????? ?? ?????? ??????? ?????
if (y1 > y2) change = true; else change = false;
else
//???? ? ?????? ?????? ?????? ?????? ??? ?? ?????? ?? ?????? ??????? ?????
if (y1 < y2) change = true; else change = false;
}
else {
l2 = strlen(s2);
k = 0;
//???? ??????? ?????????? ? ?? ????? ??????
while ((s1[k] == s2[k]) && ((k!=l2) || (k!= l1))) {
//?????????? ???
k++;
}
//?????????? ???????
if (s1[k] != s2[k]) {
if (HighLow)
//???? ? ?????? ?????? ?????? ?????? ??? ?? ?????? ?? ?????? ??????? ?????
if (s1[k] > s2[k]) change = true; else change = false;
else
//???? ? ?????? ?????? ?????? ?????? ??? ?? ?????? ?? ?????? ??????? ?????
if (s1[k] < s2[k]) change = true; else change = false;
}
//???? ????? ?????? ?????? ? ?????? ??? ?? ???? ????? ?????? ?????? ?????? ?? ?? ?????? ????? ??????
if ((k == l2) || (k == l1)) {
if (HighLow)
if (l1 < l2) change = false; else change = true;
else
if (l1 > l2) change = false; else change = true;
}
}
//?????? ? ?????? ??????? ????? ? ?????? ????
if (change) {
switch (mode) {
case 1: {
t1 = s1; s1 = s2; s2 = t1;
t2 = ob[i].name; ob[i].name = ob[j].name; ob[j].name = t2;
y = ob[i].year; ob[i].year = ob[j].year; ob[j].year =y;
ob[i].avtor = s1;
ob[j].avtor = s2; break;}
case 2: {
t1 = s1; s1 = s2; s2 = t1;
t2 = ob[i].avtor; ob[i].avtor = ob[j].avtor; ob[j].avtor = t2;
y = ob[i].year; ob[i].year = ob[j].year; ob[j].year =y;
ob[i].name = s1;
ob[j].name = s2; break;}
case 3: {
y = ob[i].year;
ob[i].year = ob[j].year;
ob[j].year = y;
t1 = ob[i].avtor;
ob[i].avtor = ob[j].avtor;
ob[j].avtor = t1;
t2 = ob[i].name; ob[i].name = ob[j].name; ob[j].name =t2;
y1 = ob[i].year;
break;}
}
}
change = false;
}
}
if (mode != 3) {
for (i = 0; i<numRecords; i++) {
switch (mode) {
case 1: {s1 = ob[i].avtor; break;}
case 2: {s1 = ob[i].name; break;}
case 3: {y1 = ob[i].year; break;}
}
l1 = strlen(s1);
//???? ?? ???? ???????
for (j = i+1; j<numRecords; j++) {
switch (mode) {
case 1: {s2 = ob[j].avtor; break;}
case 2: {s2 = ob[j].name; break;}
case 3: {y2 = ob[j].year; break;}
}
k=0;
l2 = strlen(s2);
//???? ??????? ?????????? ? ?? ????? ??????
while ((s1[k] == s2[k])) {
//?????????? ???
k++;
}
if (((k-1)==l2) && ((k-1)== l1))
switch (mode) {
case 1: {
t1 = ob[i+1].avtor; ob[i+1].avtor = ob[j].avtor; ob[j].avtor = t1;
t2 = ob[i+1].name; ob[i+1].name = ob[j].name; ob[j].name = t2;
y = ob[i].year; ob[i].year = ob[j].year; ob[j].year = y;
break;}
}//switch
}
}
}
};

//*** ??????????? ????? ***
void HomeBibl::AddBook (){
FILE *f = fopen("bibl.txt quot;, "a");
numRecords++;
char *t;
ob[numRecords].avtor = this->avtor;
ob[numRecords].name = this->name;
ob[numRecords].year = this->year;
fputs(b.avtor, f);
fputs("\n" f);
fputs(b.name, f);
fputs("\n" f);
AnsiString as;
as = IntToStr(b.year);
t = as.c_str();
fputs(t, f);
fputs("\n" f);
fclose(f);
}
//*** ???????? ???? ???? ***
void HomeBibl::DelAllBooks()
// ??????? ???? ?? ??????. ?????? ?????????? ????? ????????
for(int i = 0; i<numRecords; i++){
ob[i].avtor = "";
ob[i].name = "";
ob[i].year = 0;
};
ShowMessage("??? ????? ???????!");
FILE *f = fopen("bibl.txt quot;, "w");
fclose(f);
}
//*** ??????? ?????? ? AnsiString ***
AnsiString StrToAns(char *str)
{
AnsiString as;
int i,len=0;
char * s = (char *) malloc((strlen(str)) +1);
len = strlen(str);
for(i=0;i<len;i++)
s[i]=str[i];
s[i]='\0';
as=s;
return as;
}
//*** ?????????? StringGrid'a ??????? ?????????? ? ???????? ????????? ***
void fillGrid(TStringGrid *sg)
{
int i,j;
sg->RowCount=numF ndRecords+1;
for(i=0;i<numFind ecords;i++)
{
sg->Cells[0][i+1]= trToAns(ob[arr[i].idx].avtor);
sg->Cells[1][i+1]= trToAns(ob[arr[i].idx].name);
sg->Cells[2][i+1]= ntToStr(ob[arr[i].idx].year);
}
}
//*** ????? ????? ***
void HomeBibl::SearchBook (){
bool f=false;
int k = 0;
for (int i=0; i< Max_Num_EqBooks; i++) arr[i].idx = 0;
if (strcmp(this->avt r, "")!=0 ) {
for(int i = 0; i<numRecords; i++){
if (strcmp(AnsiStrLower ob[i].avtor), this->avtor)==0) {
if (strcmp(this->nam , "") != 0) {
if (strcmp(AnsiStrLower ob[i].name), this->name)==0) {
if (this->year != 0) {
if (ob[i].year == this->year)
f = true;
else f=false;
}
else f=true;
}
else f = false;
}
else {
if (this->year != 0) {
if (ob[i].year == this->year)
f = true;
else f=false;
}
else f=true;
}
} //ob[i].avtor
if (f) {arr[k].idx=i; k++;}
f = false;
}
} //b.avtor
else {
if (strcmp(this->nam , "") != 0) {
for(int i = 0; i<numRecords; i++){
if (strcmp(AnsiStrLower ob[i].name), this->name)==0)
if (this->year != 0)
if (ob[i].year == this->year) f = true; else f=false;
else f=true;
//else f=true;
if (f) {arr[k].idx=i; k++;}
f = false;
}
}
else {
if (this->year != 0) {
for(int i = 0; i<numRecords; i++){
if (this->year != 0)
if (ob[i].year == this->year) f = true; else f=false;
else f=true;
if (f) {arr[k].idx=i; k++;}
f = false;
}
}
}
}
numFindRecords = k;
}

//*** ???????? ????? ***
void HomeBibl::DelBook (int idx){
for (int i = 0; i < numRecords; i++){
ob[idx+i].avtor = ob[idx+i+1].avtor;
ob[idx+i].name = ob[idx+i+1].name;
ob[idx+i].year = ob[idx+i+1].year;
}
numRecords--;
char line[256]; // ????? ??? ????? ??????
int i;
AnsiString as;
FILE *f = fopen(BiblFile, "w");
for (int i = 0; i < numRecords; i++){
fputs(ob[i].avtor, f);
fputs("\n" f);
fputs(ob[i].name, f);
fputs("\n" f);
as = IntToStr(ob[i].year)
fputs(as.c_str(), f);
fputs("\n" f);
}
fclose(f);
}
//*** ?????????????? ????? ***
void HomeBibl::EditBook (int idx){
ob[idx].avtor = this->avtor;
ob[idx].name = this->name;
ob[idx].year = this->year;
char line[256]; // ????? ??? ????? ??????
int i;
AnsiString as;
FILE *f = fopen(BiblFile, "w");
for (int i = 0; i < numRecords; i++){
fputs(ob[i].avtor, f);
fputs("\n" f);
fputs(ob[i].name, f);
fputs("\n" f);
as = IntToStr(ob[i].year)
fputs(as.c_str(), f);
fputs("\n" f);
}
fclose(f);
}